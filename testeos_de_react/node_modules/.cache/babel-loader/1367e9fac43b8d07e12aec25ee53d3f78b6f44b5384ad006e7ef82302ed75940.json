{"ast":null,"code":"var _jsxFileName = \"/root/dev/speek/testeos_de_react/src/Components/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport data_messages from \"../Data/data_messages\";\nimport data_user_chat from \"../Data/data_user_chat\";\nimport Message from \"./Message\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatpage({\n  user_id\n}) {\n  _s();\n  let displaynone = {\n    display: \"none\"\n  };\n  if (user_id !== null) {\n    displaynone = {};\n  }\n  let chat_id = 1000;\n  for (const chat of data_user_chat) {\n    if (chat.user_id === user_id) {\n      chat_id = chat.chat_id;\n    }\n  }\n  ;\n  let message_list = [];\n  for (const message of data_messages) {\n    if (message.chat_id === chat_id) {\n      message_list.push(message);\n    }\n  }\n  ;\n  let messages = message_list.map(i => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      sender: i.sender,\n      content: i.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  });\n  const [inputValue, setInputValue] = useState(\"\");\n  console.log(inputValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"right-chat\",\n    style: {\n      backgroundImage: `url(/background-mainpage.png)`,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cont-chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat\",\n        children: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contenedor-de-la-barra\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cont-barra\",\n        style: displaynone,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          id: \"barra\",\n          value: inputValue // Establece el valor del input en el estado\n          ,\n          onChange: e => setInputValue(e.target.value) // Manejador de eventos para el cambio del input\n          ,\n          onKeyPress: e => {\n            if (e.key === \"Enter\") {\n              // Aquí puedes acceder al valor de inputValue y usarlo para enviar el mensaje\n              //const messageToSend = inputValue;\n              // Luego puedes hacer lo que necesites con el messageToSend\n              // Además, puedes limpiar el input después de presionar \"Enter\"\n              console.log(inputValue);\n              setInputValue(\"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"enviar-mensaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatpage, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n_c = Chatpage;\nvar _c;\n$RefreshReg$(_c, \"Chatpage\");","map":{"version":3,"names":["data_messages","data_user_chat","Message","React","useState","jsxDEV","_jsxDEV","Chatpage","user_id","_s","displaynone","display","chat_id","chat","message_list","message","push","messages","map","i","sender","content","fileName","_jsxFileName","lineNumber","columnNumber","inputValue","setInputValue","console","log","id","style","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","children","type","placeholder","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["/root/dev/speek/testeos_de_react/src/Components/ChatPage.jsx"],"sourcesContent":["import data_messages from \"../Data/data_messages\";\nimport data_user_chat from \"../Data/data_user_chat\";\nimport Message from \"./Message\";\nimport React, { useState } from \"react\";\n\n\nexport default function Chatpage({ user_id }) {\n  let displaynone = {\n    display: \"none\"\n  };\n\n  if (user_id !== null) {\n    displaynone = {};\n  }\n\n  let chat_id = 1000;\n  for (const chat of data_user_chat) {\n    if (chat.user_id === user_id) {\n      chat_id = chat.chat_id;\n    }\n  };\n\n  let message_list = [];\n  for (const message of data_messages) {\n    if (message.chat_id === chat_id) {\n      message_list.push(message);\n    }\n  };\n\n  let messages = message_list.map(i => {\n    return <Message\n      sender={i.sender}\n      content={i.content} />\n  });\n\n  const [inputValue, setInputValue] = useState(\"\");\n  console.log(inputValue);\n\n  return (\n    <div id=\"right-chat\" style={{\n      backgroundImage: `url(/background-mainpage.png)`,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover'\n    }}>\n      <div id=\"cont-chat\">\n        <div id=\"chat\">\n          {messages}\n        </div>\n      </div>\n      <div id=\"contenedor-de-la-barra\">\n        <div id=\"cont-barra\" style={displaynone}>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            id=\"barra\"\n            value={inputValue} // Establece el valor del input en el estado\n            onChange={(e) => setInputValue(e.target.value)} // Manejador de eventos para el cambio del input\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                // Aquí puedes acceder al valor de inputValue y usarlo para enviar el mensaje\n                //const messageToSend = inputValue;\n                // Luego puedes hacer lo que necesites con el messageToSend\n                // Además, puedes limpiar el input después de presionar \"Enter\"\n                console.log(inputValue);\n                setInputValue(\"\");\n              }\n            }}\n          ></input>\n          <input type=\"submit\" id=\"enviar-mensaje\"></input>\n        </div>\n      </div>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}