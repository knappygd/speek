{"ast":null,"code":"var _jsxFileName = \"/root/dev/speek/testeos_de_react/src/Components/Card.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport \"../CSS/Card.css\";\n// UserContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [username, setUsername] = useState(\"Some user\");\n  const updateUsername = newUsername => {\n    setUsername(newUsername);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      username,\n      updateUsername\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"kMX1WmpCa5nCsNc/JmFGNDGPVX8=\");\n_c = UserProvider;\nexport function useUser() {\n  _s2();\n  return useContext(UserContext);\n}\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function Card({\n  title = \"titulo por defecto\",\n  description = \"descripcion por defecto\"\n}) {\n  _s3();\n  const {\n    updateUsername\n  } = useUser(); // Obtén la función para actualizar el username desde el contexto\n\n  const toggleContenido = () => {\n    updateUsername(title); // Actualiza el username en lugar de la variable global\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"Card\",\n    onClick: toggleContenido,\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s3(Card, \"ojqV6PhZ9lk0LKZ5Tqg98xkUsYU=\", false, function () {\n  return [useUser];\n});\n_c2 = Card;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserProvider\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","username","setUsername","updateUsername","newUsername","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","Card","title","description","_s3","toggleContenido","className","onClick","_c2","$RefreshReg$"],"sources":["/root/dev/speek/testeos_de_react/src/Components/Card.jsx"],"sourcesContent":["\nimport \"../CSS/Card.css\";\n// UserContext.js\nimport React, { createContext, useContext, useState } from 'react';\n\nconst UserContext = createContext();\n\nexport function UserProvider({ children }) {\n  const [username, setUsername] = useState(\"Some user\");\n\n  const updateUsername = (newUsername) => {\n    setUsername(newUsername);\n  };\n\n  return (\n    <UserContext.Provider value={{ username, updateUsername }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport function useUser() {\n  return useContext(UserContext);\n}\n\nexport default function Card({ title = \"titulo por defecto\", description = \"descripcion por defecto\" }) {\n  const { updateUsername } = useUser(); // Obtén la función para actualizar el username desde el contexto\n\n  const toggleContenido = () => {\n    updateUsername(title); // Actualiza el username en lugar de la variable global\n  };\n  return (\n    <button className='Card' onClick={toggleContenido}>\n      <h3>{title}</h3>\n      {/*<p>{description}</p>*/}\n    </button>\n  );\n}\n"],"mappings":";;;;AACA,OAAO,iBAAiB;AACxB;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EAErD,MAAMS,cAAc,GAAIC,WAAW,IAAK;IACtCF,WAAW,CAACE,WAAW,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,QAAQ;MAAEE;IAAe,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACV,EAAA,CAZeF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAc5B,OAAO,SAASc,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAOpB,UAAU,CAACI,WAAW,CAAC;AAChC;AAACgB,GAAA,CAFeD,OAAO;AAIvB,eAAe,SAASE,IAAIA,CAAC;EAAEC,KAAK,GAAG,oBAAoB;EAAEC,WAAW,GAAG;AAA0B,CAAC,EAAE;EAAAC,GAAA;EACtG,MAAM;IAAEd;EAAe,CAAC,GAAGS,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEtC,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5Bf,cAAc,CAACY,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;;EACD,oBACEnB,OAAA;IAAQuB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEF,eAAgB;IAAAnB,QAAA,eAChDH,OAAA;MAAAG,QAAA,EAAKgB;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEb;AAACO,GAAA,CAZuBH,IAAI;EAAA,QACCF,OAAO;AAAA;AAAAS,GAAA,GADZP,IAAI;AAAA,IAAAH,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}